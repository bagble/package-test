plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
    id 'maven-publish'
}

java.toolchain.languageVersion.set(JavaLanguageVersion.of(16))

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly('io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT')
    compileOnly('org.jetbrains:annotations:22.0.0')
    compileOnly('dev.jorel.CommandAPI:commandapi-core:6.3.1')
//    compileOnly fileTree(dir: 'libs', include: ['*.jar']) // Local library

    implementation('dev.jorel.CommandAPI:commandapi-shade:6.3.0')
    implementation 'com.github.Kill00.SQLiteMC:sqlitemc-core:1.0.0'
}


tasks {
    compileJava {
        options.encoding = "UTF-8"
    }

    javadoc {
        options.encoding = "UTF-8"
    }

    processResources {
        filesMatching("**/*.yml") {
            expand(project.properties)
        }
    }

    jar {
        archiveBaseName.set(project.properties.get("pluginName").toString())
        archiveVersion.set(project.properties.get("pluginVersion").toString())
        archiveClassifier.set("")
        from("LICENSE", "README.MD")
    }

    project.delete(
            file('build/resources')
    )
}

task paperJar(type: Jar, dependsOn: classes) {
    finalizedBy shadowJar {
        archiveBaseName.set(project.properties.get("pluginName").toString())
        archiveVersion.set(project.properties.get("pluginVersion").toString())
        archiveClassifier.set("")
        from("LICENSE", "README.MD")

        doLast {
            copy {
                from(archiveFile)
                var plugins = new File(rootDir, ".debug/plugins/")
                if (new File(plugins, archiveFileName.get()).exists()) into(new File(plugins, "update")) else into(plugins)
            }
        }
    }
    enabled(false)

    assemble {
        dependsOn(shadowJar)
    }
}

publishing {
    repositories {
        maven {
            name = "github"
            url = "https://maven.pkg.github.com/bagble/${rootProject.name}" as Object

            credentials {
                username = "bagble"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        "maven"(MavenPublication) {
            groupId = project.properties.get("pluginGroup").toString()
            version = project.properties.get("pluginVersion").toString()
            from(components["java"])

            pom {
                name.set(rootProject.name)
                description.set("Simple deploy test")
                url.set("https://github.com/bagble/${rootProject.name}")

                developers {
                    developer {
                        id.set("bagble")
                        name.set("bagble")
                        email.set("bagble@gmail.com")
                        url.set("https://github.com/bagble")
                        roles.addAll("developer")
                        timezone.set("Asia/Seoul")
                    }
                }

                scm {
                    connection.set("scm:git:git://github.com/bagble/${rootProject.name}.git")
                    developerConnection.set("scm:git:ssh://github.com:bagble/${rootProject.name}.git")
                    url.set("https://github.com/bagble/${rootProject.name}")
                }
            }
        }
    }
}